// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookclub.data;

namespace bookclub.Migrations
{
    [DbContext(typeof(mycontext))]
    [Migration("20181212131951_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication20.Authorbook", b =>
                {
                    b.Property<int>("author_book_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("authorid");

                    b.Property<int>("bookid");

                    b.HasKey("author_book_id");

                    b.HasIndex("authorid");

                    b.HasIndex("bookid");

                    b.ToTable("Authorbook");
                });

            modelBuilder.Entity("WebApplication20.Models.Author", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bookid");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<int>("phone");

                    b.HasKey("id");

                    b.HasIndex("Bookid");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("WebApplication20.Models.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Publisherpid");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(9,4)");

                    b.Property<int>("publisher_onepublisher_one");

                    b.Property<DateTime>("relasedate");

                    b.Property<string>("type");

                    b.HasKey("id");

                    b.HasIndex("Publisherpid");

                    b.ToTable("books");
                });

            modelBuilder.Entity("WebApplication20.Models.Bookuser", b =>
                {
                    b.Property<int>("bookid");

                    b.Property<int>("userid");

                    b.HasKey("bookid", "userid");

                    b.HasIndex("userid");

                    b.ToTable("Bookuser");
                });

            modelBuilder.Entity("WebApplication20.Models.Publisher", b =>
                {
                    b.Property<int>("pid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired();

                    b.HasKey("pid");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("WebApplication20.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<int>("phonenumber");

                    b.Property<string>("username")
                        .IsRequired();

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication20.Authorbook", b =>
                {
                    b.HasOne("WebApplication20.Models.Author", "author_author")
                        .WithMany("Booklist")
                        .HasForeignKey("authorid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication20.Models.Book", "book_book")
                        .WithMany()
                        .HasForeignKey("bookid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication20.Models.Author", b =>
                {
                    b.HasOne("WebApplication20.Models.Book")
                        .WithMany("authorlist")
                        .HasForeignKey("Bookid");
                });

            modelBuilder.Entity("WebApplication20.Models.Book", b =>
                {
                    b.HasOne("WebApplication20.Models.Publisher")
                        .WithMany("booklist")
                        .HasForeignKey("Publisherpid");
                });

            modelBuilder.Entity("WebApplication20.Models.Bookuser", b =>
                {
                    b.HasOne("WebApplication20.Models.Book", "book_book")
                        .WithMany("userlist")
                        .HasForeignKey("bookid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication20.Models.User", "user_user")
                        .WithMany("Booklist")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
